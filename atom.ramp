-- These ones where made using the Atom package: https://github.com/pndmix/atom-rampcode

set 1.15;
zero;
(
  sin( $v1 * ($v1/($v1/1000%6*2+1)%($v1/3000%7%4*2+2)) / ($v1/2000%3+1) / ($v1/16000%2*($v1/1000%3+1)+1)) * if($v1/1000%5<4,
  pow(($v1/2000%9!=0)-$v1%1000/1000, $v1/1000%8),pow(($v1/2000%9!=0)-$v1%500/500, $v1/500%6*2+1) ) *0.1
+ sin($v1%1000*pow(1-$v1%1000/1000,8))*0.15*($v1/1000%8%6==0)*($v1/8000%4!=0)+ sin($v1*sin($v1))*pow(1-$v1%1000/1000,10)*sin($v1/800)*0.1
+ (sin($v1/($v1/32000%2+20))<0.1)*($v1/1000%5>$v1/1000%3)*($v1/14000%5<2)*0.15
)*3;

set 1.1;zero;
(
(
  sin($v1/($v1/5%5+($v1/4000%3)/0.05)*($v1/16000%99*7%6+4)*0.5)*sin($v1/($v1/8000%4*2+2))*0.2*if($v1/9000%2==0, 0.7, pow(1-$v1%1000/1000, abs(4-$v1/1000%9+1)))*0.4*($v1/2000%7>$v1/2000%3)*($v1/8000%2==1)
+sin($v1*0.06+sin($v1*0.03)*($v1/1000%3*10+20)*pow(($v1/1000%16!=15)-$v1%1000/1000,$v1/2000%3*3+3))*($v1/1000%8%3!=0)*pow(1-$v1%1000/1000,1.5)*0.1
+sin($v1%($v1/3000%2*100+100)*($v1/1000%4*2+2)*sin($v1%8)*sin($v1/1000%7/2)*2)*0.025*($v1/8000%2==0)
+sin($v1*($v1/2000%2*2+1)%34000*9999)*0.15*pow(1-$v1%1000/1000\,($v1/1000%5*2+3))*(sin($v1/280)*0.5+0.5)
)*1.5
)*3;

0;

set 1.2;zero;
((
  sin($v1*0.05+sin($v1*0.025)*($v1/2000%7+1)*pow(1-$v1%1000/1000,$v1/1000%10))*0.25*150%($v1/2000%3*15+15)/($v1/2000%3*15+15)*0.15*(($v1/1000%12<9)-$v1%1000/1000)*($v1/1000%9>$v1/1000%5)*2
+sin($v1/($v1*($v1/8000%2+1)%5+1)*($v1/10000%2*2+($v1/6000%2*0.5+0.5))/($v1/12000%2*$v1/14000%4+1))*0.05*($v1/8000%3==0)
)*($v1/8000%2==0)
+(
  sin($v1/($v1/($v1/($v1/9000%9*1000+1000)%7*25+25)%4+($v1/8000%3+1))*pow($v1/($v1/4000%3*1000+1000)%4+1,($v1/16000%2+1)))*0.05*($v1/8000%99*72%10<5)
+sin($v1*0.01+sin($v1*($v1/2000%3*0.01+0.02))*($v1/($v1/8000%8*1000+1000)%8*4+4)*sin($v1/8000))*0.2*pow(($v1/4000%8!=0)-($v1%($v1/8000%8*1000+1000)/($v1/8000%8*1000+1000)),2)*($v1/8000%99*72%10>5)
+sin($v1%($v1/1000%2*500+100)*pow(1-$v1%1000/1000,5))*0.15*($v1/4000%2==0&&$v1/1000%4!=1)
)*($v1/8000%2==1))*2;

set 1.11;zero;
(sin(($v1*(sin($v1/1000%25+1)*0.5+0.5)*sin($v1%5)))*0.2*if($v1/10000%2==0,1*sin($v1/500),pow((($v1/2000%5!=4)-$v1%1000/1000),3)*2)*0.8*($v1/25000%2>0)+sin($v1/sin($v1/1000%90*31%60)*sin($v1%($v1/1000%68*5%8)))*pow(1-$v1%(1000/($v1/3500%2*2+1))/(1000/($v1/3500%2*2+1))\,($v1/1000%8%5*27%8/8)*4+1)*0.3*($v1/25000%2<1)+sin($v1%2000/4*pow(1-$v1%1000/1000\,8))*($v1/1000%32*9%88/88<0.5)*0.5+sin($v1*sin($v1%50))*pow(1-$v1%1000/1000\,2.5)*($v1/1000%8==0)*0.8)*0.8;

set 1.4; zero;
(
  (sin($v1/($v1/9000%71*43%3+0.5)*sin($v1/4000%9*15%8+1)/($v1/($v1/4000%8*17%8+1)%6)%($v1/4000%10*60%50+2))*if($v1/1000%99*7%16<8\,sin($v1/3000)\,pow(1-$v1%1000/1000\,3)))*($v1/7000%5==1)*0.3+(sin(16*$v1/($v1/9000%71*43%3+0.5)*sin($v1/4000%9*15%8+1)/($v1/($v1/4000%8*17%8+1)%6)%($v1/4000%10*60%50+2))*if($v1/1000%15<8\,1\,1.2*pow(1-$v1%1000/1000\,3)))*0.3*($v1/7000%5==3)+sin($v1*0.088+sin($v1*0.044)*(7-$v1/1000%7*5+2)*pow(1-$v1%1000/1000\,($v1/1000%9)))*pow(1-$v1%1000/1000\,0.2)*0.3*($v1/15000%2)+sin($v1*sin($v1%2))*pow(1-$v1%1000/1000\,2)*($v1/1000%6==0)*0.25
  )*1;

set 0.9; zero;
(sin($v1%($v1/2000%7*10+10)*($v1/2000%66*739%10*10+9))*(($v1/1000%9>2)-$v1%1000/1000)*0.25*($v1/17000%2==0)+sin($v1*($v1/32000%3+1)*($v1*1.2%14)%5+1)*0.25*(($v1/10
  00%14>3)-$v1%1000/1000)*($v1/17000%2==1)+(sin($v1*1.05/(($v1/30000%2*4+4)/2*($v1/90%2*2+1)))<0.1)*0.199*(($v1/2000%8>2)-$v1%2000/2000)+sin($v1%1000*pow(1-$v1%1000/1000\,10))*($v1/1000%16%3==0)*($v1/16000%2==0)*0.5
)*0.8;

set 1.5; zero; (sin($v1*(1.01+($v1/32000%2*0.09))/($v1/100%2+5)%7)*sin($v1/800)*if($v1/15000%2<1\,1\,(1-$v1%1000/1000))*($v1/4000%4==0)+sin(($v1%16000+($v1/32000%8*16000))*9999)*sin($v1/700)*if($v1/17000%2<1\,1\,(1-$v1%1000/1000)*1)*($v1/4000%4==2)+sin($v1/($v1/30000%3+7)+sin($v1/($v1/30000%3+7))*($v1*0.1%6))*if($v1/16000%2<1\,sin($v1%8000/1000)\,pow(1-$v1%1000/1000\,1))*($v1/4000%3==2))*0.35+sin($v1%1000*pow(1-$v1%1000/1000\,10))*($v1/1000%8>3)*($v1/16000%2==0)*0.35;
